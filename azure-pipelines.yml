trigger: none

resources:
  repositories:
    - repository: Pipelines
      type: git
      name: Ezconet.Pipelines

variables:
  - group: Servidores

parameters:
- name: BuildFrontend
  displayName: Build Frontend?
  type: boolean
- name: BuildBackend
  displayName: Build Backend?
  type: boolean
  
stages:
# BUILD
  - stage: BuildSolution
    displayName: 'Build Solution'
    condition: eq('${{ parameters.BuildBackend }}', true)
    jobs:
      - template: /templates/ezc-build-pack-netcore-solution.yaml@Pipelines
        parameters:
          jobName: 'Build Solution'
          solutionName: 'backend'
          projects:
            - "MS-OMS/WebApi/Api"
            - "MS-OMS/Worker/Worker"
            - "MS-OMS/HangfireJobs/HangfireJobs"
            - "MS-WMS/WebApi/Api"
            - "MS-WMS/Worker/Worker"
            - "MS-WMS/HangfireJobs/HangfireJobs"
            - "Autenticacao/Api/Api"
            # - "MS-WMS"
            # - "Autenticacao"
          artifactName: 'Backend'
          selfContained: true
    # - job: EZC_Build_Pack_Net_Core_Solution
    #   pool:
    #     vmImage: 'windows-latest'
    #   steps:
    #     - task: DotNetCoreCLI@2
    #       displayName: 'Publish OMS-API'
    #       inputs:
    #         command: publish
    #         publishWebProjects: false
    #         projects: 'Api.csproj'
    #         arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)\MS-OMS\Api --runtime win10-x64 --self-contained true'
    #         zipAfterPublish: false
    #         modifyOutputPath: false
    #         workingDirectory: /src/backend/MS-OMS
    #     - task: PublishBuildArtifacts@1
    #       displayName: 'Publish Artifact'
    #       inputs:
    #         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #         ArtifactName: 'OMS-API'

  # - stage: BuildFrontend
  #   displayName: 'Build Frontend'
  #   condition: eq('${{ parameters.BuildFrontend }}', true)
  #   jobs:
  #     - job:
  #       steps:
  #         - template: /templates/ezc-build-pack-angular.yaml@Pipelines
  #           parameters:
  #             Job: BuildFrontend
  #             ProjectPath: 'frontend'
  #             ArtifactName: 'Frontend'
# FIM BUILD